{"version":3,"sources":["components/Weekdays.js","components/Controls.js","components/MonthAndYearDisplay.js","context/context.js","components/Appointment.js","components/Modal.js","components/Day.js","components/DateGrid.js","context/reducers.js","context/GlobalState.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["Weekdays","weekdays","Array","apply","map","_","i","moment","startOf","isoWeekday","format","react_default","a","createElement","className","elem","key","Controls","props","onClick","e","onPrevMonth","onCurrentTime","onNextMonth","MonthAndYearDisplay","concat","month","year","React","createContext","appointments","addAppointment","apptmnt","removeAppointment","Appointment","context","useContext","Context","appointment","time","text","title","Modal","_ref","handleClose","show","date","dateObject","_useState","useState","_useState2","Object","slicedToArray","textValue","setText","showHideClassName","withAppointment","find","formatDateForComparison","event","stopPropagation","components_Appointment","react","name","placeholder","onChange","target","value","Day","state","showModal","_this","setState","hideModal","_this2","this","currentDayClass","isCurrentDay","blank","classWithAppointment","digit","components_Modal","children","Component","contextType","DateGrid","getFirstDayOfMonth","firstDay","findCurrentDay","day","parseInt","blanks","daysInMonth","push","components_Day","totalSlots","rows","cells","length","forEach","row","reducer","action","type","objectSpread","toConsumableArray","addAppointmentToCalend","filter","removeAppointmentFromCalend","GlobalState","_useReducer","useReducer","_useReducer2","dispatch","context_context","Provider","app","Calendar","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","getMonth","getYear","add","subtract","inherits","createClass","context_GlobalState","components_MonthAndYearDisplay","components_Controls","components_Weekdays","components_DateGrid","App","components_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48c7c5d4.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nconst Weekdays = () => {\n\t// hack for moment, because by default it starts week from sunday, and changes of locale didnt help\n\tconst weekdays = Array.apply(null, Array(7)).map((_, i) =>\n\t\tmoment(i, \"e\")\n\t\t\t.startOf(\"week\")\n\t\t\t.isoWeekday(i + 1)\n\t\t\t.format(\"ddd\")\n\t);\n\treturn (\n\t\t<div className=\"row weekday\">\n\t\t\t{weekdays.map(elem => (\n\t\t\t\t<div key={elem}>{elem}</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Weekdays;\n","import React from \"react\";\n\nconst Controls = props => {\n\treturn (\n\t\t<div className=\"controls\">\n\t\t\t<button onClick={e => props.onPrevMonth()}>&#60; Prev</button>\n\t\t\t<button onClick={e => props.onCurrentTime()}>Current</button>\n\t\t\t<button onClick={e => props.onNextMonth()}>Next &#62;</button>\n\t\t</div>\n\t);\n};\n\nexport default Controls;\n","import React from \"react\";\n\nconst MonthAndYearDisplay = props => {\n\treturn (\n\t\t<div className=\"month-and-year\">{`${props.month}, ${props.year}`}</div>\n\t);\n};\n\nexport default MonthAndYearDisplay;\n","import React from \"react\";\n\nexport default React.createContext({\n    appointments: [],\n    addAppointment: apptmnt => {},\n    removeAppointment: apptmnt => {}\n})","import React, { useContext } from \"react\";\nimport Context from \"../context/context\";\n\nconst Appointment = props => {\n\tconst context = useContext(Context);\n\treturn (\n\t\t<div className=\"appointment\">\n\t\t\t<div className=\"appointment-day\">{props.appointment.time}</div>\n\t\t\t<div className=\"appointment-body\">\n\t\t\t\t{props.appointment.text}\n\t\t\t\t<label title=\"Delete\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"delete\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tcontext.removeAppointment(props.appointment)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t&times;\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Appointment;\n","import React, { useState, useContext, Fragment } from \"react\";\nimport Context from \"../context/context\";\nimport Appointment from \"./Appointment\";\nimport { formatDateForComparison } from \"./Day\";\n\nconst Modal = ({ handleClose, show, date, dateObject }) => {\n\tconst context = useContext(Context);\n\tconst [textValue, setText] = useState(\"\");\n\tconst showHideClassName = show\n\t\t? \"modal display-block\"\n\t\t: \"modal display-none\";\n\tconst withAppointment = context.appointments.find(\n\t\telem => elem.time === formatDateForComparison(date, dateObject)\n\t);\n\treturn (\n\t\t<div className={showHideClassName} onClick={handleClose}>\n\t\t\t<section\n\t\t\t\tclassName=\"modal-main\"\n\t\t\t\tonClick={event => event.stopPropagation()}>\n\t\t\t\t{withAppointment ? (\n\t\t\t\t\t<Appointment appointment={withAppointment} />\n\t\t\t\t) : (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className=\"appointment-day\">\n\t\t\t\t\t\t\t{formatDateForComparison(date, dateObject)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"appointment\"\n\t\t\t\t\t\t\tplaceholder=\"Add appointment...\"\n\t\t\t\t\t\t\tclassName=\"app-textarea\"\n\t\t\t\t\t\t\tonChange={e => setText(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"modal-controls\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tcontext.addAppointment({\n\t\t\t\t\t\t\t\t\ttext: textValue,\n\t\t\t\t\t\t\t\t\ttime: formatDateForComparison(\n\t\t\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t\t\t\tdateObject\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t\t<button className=\"modal-controls\" onClick={handleClose}>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t</div>\n\t);\n};\n\nexport default Modal;\n","import React, { Component, Fragment } from \"react\";\nimport Context from \"../context/context\";\nimport Modal from \"./Modal\";\n\nexport const formatDateForComparison = (date, dateObject) =>\n\t`${date} ${dateObject.format(\"MMMM\")} ${dateObject.format(\"YYYY\")}`;\n\nclass Day extends Component {\n\tstate = { show: false };\n\tstatic contextType = Context;\n\tshowModal = () => {\n\t\tthis.setState({ show: true });\n\t};\n\n\thideModal = () => {\n\t\tthis.setState({\n\t\t\tshow: false\n\t\t});\n\t};\n\n\trender() {\n\t\tconst currentDayClass = this.props.isCurrentDay ? \"current-day\" : \"\";\n\t\tif (this.props.blank) {\n\t\t\treturn <div className=\"day-center blank\">{` `}</div>;\n\t\t} else {\n\t\t\tconst classWithAppointment = this.context.appointments.find(\n\t\t\t\telem =>\n\t\t\t\t\telem.time ===\n\t\t\t\t\tformatDateForComparison(\n\t\t\t\t\t\tthis.props.digit,\n\t\t\t\t\t\tthis.props.dateObject\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t\t? \"with-appointment\"\n\t\t\t\t: \"\";\n\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`day-center ${currentDayClass} ${classWithAppointment}`}\n\t\t\t\t\t\tonClick={this.showModal}>\n\t\t\t\t\t\t{this.props.digit}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tshow={this.state.show}\n\t\t\t\t\t\thandleClose={this.hideModal}\n\t\t\t\t\t\tchildren=\"something\"\n\t\t\t\t\t\tdate={this.props.digit}\n\t\t\t\t\t\tdateObject={this.props.dateObject}\n\t\t\t\t\t/>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Day;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Day from \"./Day\";\n\nconst DateGrid = props => {\n\tconst getFirstDayOfMonth = () => {\n\t\tconst dateObject = props.dateObject;\n\t\tconst firstDay = moment(dateObject)\n\t\t\t.startOf(\"month\")\n\t\t\t.format(\"d\");\n\t\treturn firstDay === 0 ? 7 : firstDay - 1;\n\t};\n\n\t// checks is a day current, and assigns class for highlighting\n\tconst findCurrentDay = day => {\n\t\treturn (\n\t\t\tparseInt(day) === parseInt(moment().day()) &&\n\t\t\tparseInt(props.dateObject.format(\"M\")) - 1 ===\n\t\t\t\tparseInt(moment().month()) &&\n\t\t\tparseInt(props.dateObject.format(\"YYYY\")) ===\n\t\t\t\tparseInt(moment().year())\n\t\t);\n\t};\n\n\tconst blanks = [],\n\t\tdaysInMonth = [];\n\n\tfor (let i = 0; i < getFirstDayOfMonth(); i++) {\n\t\tblanks.push(<Day key={`${i}blankdays`} blank={true} />);\n\t}\n\tfor (let day = 1; day <= moment().daysInMonth(); day++) {\n\t\tdaysInMonth.push(\n\t\t\t<Day\n\t\t\t\tblank={false}\n\t\t\t\tkey={`${day}key`}\n\t\t\t\tdigit={day}\n\t\t\t\tdateObject={props.dateObject}\n\t\t\t\tisCurrentDay={findCurrentDay(day)}\n\t\t\t/>\n\t\t);\n\t}\n\tlet totalSlots = [...blanks, ...daysInMonth],\n\t\trows = [],\n\t\tcells = [];\n\n\tif (totalSlots.length % 7 !== 0) {\n\t\tfor (let i = 0; i < totalSlots.length % 7; i++) {\n\t\t\ttotalSlots.push(<Day key={`${i}blank`} blank={true} />);\n\t\t}\n\t}\n\ttotalSlots.forEach((row, i) => {\n\t\tif (i % 7 !== 0) {\n\t\t\tcells.push(row);\n\t\t} else {\n\t\t\trows.push(cells);\n\t\t\tcells = [];\n\t\t\tcells.push(row);\n\t\t}\n\t\tif (i === totalSlots.length - 1) {\n\t\t\trows.push(cells);\n\t\t}\n\t});\n\tconst days = rows.map((day, i) => {\n\t\treturn (\n\t\t\t<div key={`${i}daysinmonth`} className=\"row\">\n\t\t\t\t{day}\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn days;\n};\n\nexport default DateGrid;\n","export const ADD_APPOINTMENT = \"ADD_APPOINTMENT\";\nexport const REMOVE_APPOINTMENT = \"REMOVE_APPOINTMENT\";\n\nconst addAppointmentToCalend = (appointment, state) => {\n\treturn { ...state, appointments: [...state.appointments, appointment] };\n};\n\nconst removeAppointmentFromCalend = (appointment, state) => {\n\treturn {\n\t\t...state,\n\t\tappointments: [...state.appointments].filter(\n\t\t\telem => appointment.time !== elem.time\n\t\t)\n\t};\n};\n\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_APPOINTMENT:\n\t\t\treturn addAppointmentToCalend(action.appointment, state);\n\t\tcase REMOVE_APPOINTMENT:\n\t\t\treturn removeAppointmentFromCalend(action.appointment, state);\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n","import React, { useReducer } from \"react\";\n\nimport Context from \"./context\";\nimport { reducer, ADD_APPOINTMENT, REMOVE_APPOINTMENT } from \"./reducers\";\n\nconst GlobalState = props => {\n\tconst [state, dispatch] = useReducer(reducer, { appointments: [] });\n\n\tconst addAppointment = app => {\n\t\tdispatch({ type: ADD_APPOINTMENT, appointment: app });\n\t};\n\n\tconst removeAppointment = app => {\n\t\tdispatch({ type: REMOVE_APPOINTMENT, appointment: app });\n\t};\n\n\treturn (\n\t\t<Context.Provider\n\t\t\tvalue={{\n\t\t\t\tappointments: state.appointments,\n\t\t\t\taddAppointment,\n\t\t\t\tremoveAppointment\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</Context.Provider>\n\t);\n};\n\nexport default GlobalState;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport Weekdays from \"./Weekdays\";\nimport Controls from \"./Controls\";\nimport MonthAndYearDisplay from \"./MonthAndYearDisplay\";\nimport DateGrid from \"./DateGrid\";\nimport GlobalState from \"../context/GlobalState\";\n\nexport class Calendar extends Component {\n\tstate = {\n\t\tdateObject: moment()\n\t};\n\n\tgetMonth = () => {\n\t\treturn this.state.dateObject.format(\"MMMM\");\n\t};\n\n\tgetYear = () => {\n\t\treturn this.state.dateObject.format(\"YYYY\");\n\t};\n\n\tonNextMonth = () => {\n\t\tthis.setState({\n\t\t\tdateObject: this.state.dateObject.add(1, \"month\")\n\t\t});\n\t};\n\n\tonPrevMonth = () => {\n\t\tthis.setState({\n\t\t\tdateObject: this.state.dateObject.subtract(1, \"month\")\n\t\t});\n\t};\n\n\tonCurrentTime = () => {\n\t\tthis.setState({ dateObject: moment() });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<GlobalState>\n\t\t\t\t<div>\n\t\t\t\t\t<MonthAndYearDisplay\n\t\t\t\t\t\tmonth={this.getMonth()}\n\t\t\t\t\t\tyear={this.getYear()}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<Controls\n\t\t\t\t\t\t\tonPrevMonth={this.onPrevMonth}\n\t\t\t\t\t\t\tonCurrentTime={this.onCurrentTime}\n\t\t\t\t\t\t\tonNextMonth={this.onNextMonth}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Weekdays />\n\t\t\t\t\t\t<DateGrid dateObject={this.state.dateObject} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</GlobalState>\n\t\t);\n\t}\n}\n\nexport default Calendar;\n","import React from 'react';\nimport Calendar from \"./components/Calendar\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}